{"version":3,"sources":["../src/trim-left-x.js"],"names":[],"mappings":"AAAA,OAAO,wBAAP,MAAqC,+BAArC;AACA,OAAO,UAAP,IAAoB,UAApB,QAAqC,eAArC;AAEA,IAAM,YAAY,GAAG,EAArB;AACA,IAAM,SAAS,GAAG,OAAO,WAAzB;AACA,IAAM,UAAU,GAAG,IAAI,SAAJ,aAAmB,UAAnB,QAAnB;AACA,IAAM,MAAM,GAAG,IAAI,SAAJ,aAAmB,UAAnB,QAAf;IACO,O,GAAW,Y,CAAX,O;AAEP;;;;;;;;AAOA,OAAO,SAAS,YAAT,CAAsB,MAAtB,EAA8B;AACnC,SAAO,OAAO,CAAC,IAAR,CAAa,wBAAwB,CAAC,MAAD,CAArC,EAA+C,UAA/C,EAA2D,YAA3D,CAAP;AACD;AAED;;;;;;;;AAOA,eAAe,SAAS,YAAT,CAAsB,MAAtB,EAA8B;AAC3C,SAAO,OAAO,CAAC,IAAR,CAAa,wBAAwB,CAAC,MAAD,CAArC,EAA+C,MAA/C,EAAuD,YAAvD,CAAP;AACD","file":"trim-left-x.esm.js","sourcesContent":["import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace, {string2016} from 'white-space-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reLeft2016 = new RegExpCtr(`^[${string2016}]+`);\nconst reLeft = new RegExpCtr(`^[${whiteSpace}]+`);\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method removes whitespace from the left end of a string. (ES2016).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nexport function trimLeft2016(string) {\n  return replace.call(requireCoercibleToString(string), reLeft2016, EMPTY_STRING);\n}\n\n/**\n * This method removes whitespace from the left end of a string. (ES2018).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nexport default function trimLeft2018(string) {\n  return replace.call(requireCoercibleToString(string), reLeft, EMPTY_STRING);\n}\n"]}